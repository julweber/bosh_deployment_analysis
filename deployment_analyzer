#! /usr/bin/env ruby

require 'yaml'
require 'pp'
require 'erb'

def load_yml(file_path)
  YAML::load_file(file_path)
end

def check_args
  if ARGV[0].nil? || ARGV[0] == ''
    puts "Usage: deployment_analyzer <deployment_file_path>"
    exit -1
  end
end

def analyze_manifest(manifest_hash, details_on = false)
  puts "### Analysis results ###"
  analyze_releases(manifest_hash, details_on)
  analyze_jobs(manifest_hash, details_on)
  analyze_disk_usage(manifest_hash)
end

def analyze_releases(manifest_hash, details_on = false)
  puts ''
  puts '### Releases ###'
  pp manifest_hash['releases']
end

def analyze_jobs(manifest_hash, details_on = false)
  puts ''
  puts '### Jobs ###'
  manifest_hash['jobs'].each do |job|
    puts "- #{job['name']}; #{job['instances']} vms : "
    analyze_persistent_disk job, manifest_hash

    if details_on
      puts "  - Resource pool: #{job['resource_pool']}"
      puts "  - Templates:"
      pp job['templates']
    end
    puts ''
  end
end

def analyze_persistent_disk(job, manifest_hash)
  unless job['persistent_disk'].nil?
    puts "  - disk_size: #{job['persistent_disk']}"
  end
  unless job['persistent_disk_pool'].nil?
    disk_pool_name = job['persistent_disk_pool']
    disk_pool = get_disk_pool manifest_hash, disk_pool_name
    disk_pool_size = disk_pool['disk_size']
    puts "  - disk_pool: #{disk_pool_name}"
    puts "    disk_size: #{disk_pool_size}"
  end
end

def analyze_disk_usage(manifest_hash)
  puts '### Disk Usage ###'
  disk_usage = 0
  get_jobs_with_instances(manifest_hash).each do |job|
    unless job['persistent_disk_pool'].nil?
      pool = get_disk_pool(manifest_hash, job['persistent_disk_pool'])
      disk_usage += pool['disk_size']
      puts "- job: #{job['name']} ; pool: #{job['persistent_disk_pool']} -> #{pool['disk_size']}"
    end
  end
  puts ''
  puts "Total: #{disk_usage} MB -> #{disk_usage/1024.0} GB"
  puts ''
end

def get_disk_pools(manifest_hash)
  manifest_hash['disk_pools']
end

def get_disk_pool(manifest_hash, disk_pool_name)
  get_disk_pools(manifest_hash).select { |dp| dp['name'] == disk_pool_name }.first
end

def get_jobs_with_instances(manifest_hash)
  manifest_hash['jobs'].select {|job| job['instances'] > 0 }
end

def main
  check_args
  manifest_raw = File.read ARGV[0]
  erb = ERB.new manifest_raw
  manifest = YAML.load erb.result
  details_on = false
  details_on = true if ARGV[1] == '--details'
  analyze_manifest manifest, details_on
end

main
